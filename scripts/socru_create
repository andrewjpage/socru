#!/usr/bin/env python3
import sys
import argparse
import os
import pkg_resources
sys.path.append('../')
sys.path.append('./')
from socru.SocruCreate import SocruCreate

version = ''
try:
	version = pkg_resources.get_distribution("socru").version
except pkg_resources.DistributionNotFound:
	version = 'x.y.z'

parser = argparse.ArgumentParser(
	description = 'create genome arrangement type scheme',
	usage = 'socru_create [options] output_directory assembly.fasta'
    , formatter_class=argparse.ArgumentDefaultsHelpFormatter)

parser.add_argument('output_directory', help='Output directory', type=str)
parser.add_argument('input_file', help='Input FASTA file (optionally gzipped)', type=str)


parser.add_argument('--max_bases_from_ends', '-m', help='Only look at this number of bases from start and end of fragment', type=int)
parser.add_argument('--threads','-t',  help='No. of threads to use', type=int, default=1)
parser.add_argument('--fragment_order', '-f',  help='Order of fragments, you may need to change this, example 1-2-3-4-5-6-7', type=str)
parser.add_argument('--dnaa_fasta',  '-d', help='Location of dnaA FASTA file, defaults to bundled', type=str)

parser.add_argument('--verbose', '-v', action='store_true', help='Turn on debugging [%(default)s]', default = False)
parser.add_argument('--version', action='version', version=str(version))

options = parser.parse_args()

g = SocruCreate(options)
g.run()
